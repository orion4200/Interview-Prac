class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = nums.size() ;

        sort(nums.begin(), nums.end()) ;                      

        vector<vector<int>> res ;
        for(int i=0; i<n; i++)
        {
            int front = i+1 ;                 
            int back = n-1 ;

            while(front < back)
            {
                int sum = nums[front] + nums[back] ;

                if(sum < -nums[i])
                    front++ ;
                else if(sum > -nums[i])
                    back-- ;
                else
                {
                    vector<int> t = {nums[i], nums[front], nums[back]} ;
                    res.push_back(t) ;

                    while(front < back && nums[front] == t[1]) front++ ;                          // skipping duplicates of t[1]

                    while(back > front && nums[back] == t[2]) back-- ;                        // skipping duplicates of t[2]
                }
            }
            while(i < n-1 && nums[i] == nums[i+1]) i++ ;                              // skipping duplicates of t[0]
        }

        return res ;
    }
};
